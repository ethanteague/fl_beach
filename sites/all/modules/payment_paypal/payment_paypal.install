<?php

/**
 * Implements hook_requirements().
 */
function payment_paypal_requirements($phase) {
  $requirements = array();
  $t = get_t();
  
  if ($phase == 'runtime') {

    $requirements['payment_paypal_key_crypt'] = array();
    $requirements['payment_paypal_key_crypt']['title'] = $t('Payment paypal direct');

    $key = variable_get('payment_paypal_default_crypt_password_key', FALSE);
    if (!empty($key)) {
      $requirements['payment_paypal_key_crypt']['value'] = $t('Crypt key have been founded.');
      $requirements['payment_paypal_key_crypt']['severity'] = REQUIREMENT_OK;
    }
    else {
      $requirements['payment_paypal_key_crypt']['value'] = $t('No crypt key founded.');
      $requirements['payment_paypal_key_crypt']['description'] = $t('Provided key to crypt the paypal password API credential have been lost. You must enter a new key in settings.php and edit/save payment method direct paypal with the password.');
      $requirements['payment_paypal_key_crypt']['severity'] = REQUIREMENT_ERROR;
    }
  }

  return $requirements;
}

/**
 * Implements hook_schema()
 */
function payment_paypal_schema() {
  $schema = array();

  $schema['payment_paypal_method'] = array(
    'fields' => array(
      'pmid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'api_username' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'api_passwd' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'api_signature' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'endpoint' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
      ),
      'show_error' => array(
        'type' => 'int',
        'size' => 'tiny',
        'default' => 0,
      ),
      'settings' => array(
        'type' => 'blob',
        'size' => 'big',
        'serialize' => TRUE,
      ),
    ),
    'primary key' => array('pmid'),
  );

  $schema['payment_paypal_payment'] = array(
    'fields' => array(
      'correlation_id' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'pid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'pmid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'transaction_id' => array(
        'type' => 'varchar',
        'length' => 255,
        'default' => '',
      ),
      'ack' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'timestamp' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'data' => array(
        'type' => 'blob',
        'size' => 'big',
        'serialize' => TRUE,
      ),
    ),
    'primary key' => array('correlation_id'),
    'foreign keys' => array(
      'pid' => array(
        'table' => 'payment',
        'columns' => array('pid' => 'pid'),
      ),
      'pmid' => array(
        'table' => 'payment_method',
        'columns' => array('pmid' => 'pmid'),
      ),
    ),
  );

  return $schema;
}

/**
 * Implements hook_install() 
 */
function payment_paypal_install() {
  //Define a default generated crypt key
  //but this is strongly advise to set our own key in settings.php

  $key = md5(uniqid(rand(), true));
  variable_set('payment_paypal_default_crypt_password_key', $key);
}

/**
 * Implements hook_uninstall() 
 */
function payment_paypal_uninstall() {
  variable_del('payment_paypal_default_crypt_password_key');
}
